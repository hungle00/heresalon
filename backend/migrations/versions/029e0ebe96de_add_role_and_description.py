"""Add role and description

Revision ID: 029e0ebe96de
Revises: b8c19fe801a6
Create Date: 2025-10-09 11:31:07.855887

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = '029e0ebe96de'
down_revision = 'b8c19fe801a6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create new enum with all roles
    op.execute("CREATE TYPE userrole_new AS ENUM ('CUSTOMER', 'ADMIN', 'MANAGER', 'STAFF')")
    
    # Update users table to use new enum
    op.execute("ALTER TABLE users ALTER COLUMN role TYPE userrole_new USING role::text::userrole_new")
    
    # Drop old enum and rename new one
    op.execute("DROP TYPE userrole")
    op.execute("ALTER TYPE userrole_new RENAME TO userrole")
    
    # Add description to salons table
    op.add_column('salons', sa.Column('description', sa.Text(), nullable=True))
    
    # Add salon_id to users table
    op.add_column('users', sa.Column('salon_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'users', 'salons', ['salon_id'], ['id'])
    
    # Remove uuid columns (cleanup)
    op.drop_column('appointments', 'uuid')
    op.drop_column('staffs', 'uuid')
    op.drop_column('users', 'uuid')
    op.drop_column('working_hours', 'uuid')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Restore uuid columns
    op.add_column('users', sa.Column('uuid', sa.VARCHAR(length=36), autoincrement=False, nullable=True))
    op.add_column('staffs', sa.Column('uuid', sa.VARCHAR(length=36), autoincrement=False, nullable=True))
    op.add_column('appointments', sa.Column('uuid', sa.VARCHAR(length=36), autoincrement=False, nullable=True))
    
    # Remove salon_id from users
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'salon_id')
    
    # Remove description from salons
    op.drop_column('salons', 'description')
    
    # Revert enum to original values
    op.execute("CREATE TYPE userrole_old AS ENUM ('CUSTOMER', 'ADMIN')")
    op.execute("ALTER TABLE users ALTER COLUMN role TYPE userrole_old USING role::text::userrole_old")
    op.execute("DROP TYPE userrole")
    op.execute("ALTER TYPE userrole_old RENAME TO userrole")
    # ### end Alembic commands ###

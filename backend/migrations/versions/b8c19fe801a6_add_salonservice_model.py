"""Add SalonService model and remove staff_services

Revision ID: b8c19fe801a6
Revises: e7eb14799fce
Create Date: 2025-09-29 13:21:01.070128

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = 'b8c19fe801a6'
down_revision = 'e7eb14799fce'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    tables = inspector.get_table_names()
    
    # Create salon_services table if it doesn't exist
    if 'salon_services' not in tables:
        op.create_table('salon_services',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('salon_id', sa.Integer(), nullable=False),
            sa.Column('service_id', sa.Integer(), nullable=False),
            sa.ForeignKeyConstraint(['salon_id'], ['salons.id']),
            sa.ForeignKeyConstraint(['service_id'], ['services.id']),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('salon_id', 'service_id', name='unique_salon_service')
        )
    
    # Drop old tables if they exist
    if 'staff_services' in tables:
        op.drop_table('staff_services')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Recreate staff_services table
    op.create_table('staff_services',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('service_id', sa.INTEGER(), nullable=False),
        sa.Column('staff_id', sa.INTEGER(), nullable=False),
        sa.ForeignKeyConstraint(['service_id'], ['services.id']),
        sa.ForeignKeyConstraint(['staff_id'], ['staffs.id']),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('service_id', 'staff_id', name='unique_staff_service')
    )
    
    # Drop new tables
    op.drop_table('salon_services')
    # ### end Alembic commands ###

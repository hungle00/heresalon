version: '3'

services:

  frontend:
    labels:
      shipyard.route: '/'
    build: 'frontend'
    environment:
      CI: 'true'
      DANGEROUSLY_DISABLE_HOST_CHECK: 'true'
    env_file:
      - frontend/frontend.env
    volumes:
      - './frontend/src:/app/src'
      - './frontend/public:/app/public'
    ports:
      - '3000:3000'
    depends_on:
      - backend

  backend:
    labels:
      shipyard.route: '/api'
    build: 'backend'
    environment:
      DEV: ${DEV}
      FLASK_DEBUG: '1'
    volumes:
      - './backend/filesystem/entrypoints:/entrypoints:ro'
      - './backend/migrations:/srv/migrations'
      - './backend/src:/srv/src:ro'
      - './backend/data:/srv/data'  # Volume cho SQLite database file
    ports:
      - '8080:8080'
    depends_on:
      - redis

  worker:
    labels:
      shipyard.init: 'poetry run flask db upgrade'
    build: 'backend'
    environment:
      DEV: ${DEV}
      FLASK_DEBUG: '1'
    command: '/entrypoints/worker.sh'
    volumes:
      - './backend/filesystem/entrypoints:/entrypoints:ro'
      - './backend/migrations:/srv/migrations'
      - './backend/src:/srv/src:ro'
      - './backend/data:/srv/data'  # Volume cho SQLite database file
    depends_on:
      - redis

  redis:
    image: 'redis:5.0-alpine'
    ports:
      - '6379'
